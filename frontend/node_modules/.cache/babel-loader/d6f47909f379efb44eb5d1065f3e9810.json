{"ast":null,"code":"import { FETCH_POST, REMOVE_POST, ADD_POST, UPDATE_POST, VOTE, ADD_COMMENT, REMOVE_COMMENT } from \"../actions/types\";\nexport default function rootReducer(state = {}, action) {\n  let p = state[action.postId];\n\n  switch (action.type) {\n    case FETCH_POST:\n      return { ...state,\n        [action.post.id]: action.post\n      };\n\n    case ADD_POST:\n      return { ...state,\n        [action.post.id]: { ...action.post,\n          comments: []\n        }\n      };\n\n    case UPDATE_POST:\n      return { ...state,\n        [action.post.id]: { ...action.post,\n          comments: state[action.post.id].comments\n        }\n      };\n\n    case REMOVE_POST:\n      let posts = { ...state\n      };\n      delete posts[action.postId];\n      return posts;\n\n    case VOTE:\n      return { ...state,\n        [action.postId]: { ...p,\n          votes: action.votes\n        }\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        [action.postId]: { ...p,\n          comments: [...p.comments, action.comment]\n        }\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        [action.postId]: { ...p,\n          comments: p.comments.filter(c => c.id !== action.commentId)\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/rlhag/OneDrive/Desktop/Coding Pt 2/redux-microblog/frontend/src/reducers/posts.js"],"names":["FETCH_POST","REMOVE_POST","ADD_POST","UPDATE_POST","VOTE","ADD_COMMENT","REMOVE_COMMENT","rootReducer","state","action","p","postId","type","post","id","comments","posts","votes","comment","filter","c","commentId"],"mappings":"AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,WANF,EAOEC,cAPF,QAQO,kBARP;AAYA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AACtD,MAAIC,CAAC,GAAGF,KAAK,CAACC,MAAM,CAACE,MAAR,CAAb;;AAEA,UAAQF,MAAM,CAACG,IAAf;AAEE,SAAKZ,UAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAY,SAACC,MAAM,CAACI,IAAP,CAAYC,EAAb,GAAkBL,MAAM,CAACI;AAArC,OAAP;;AAEF,SAAKX,QAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACI,IAAP,CAAYC,EAAb,GAAkB,EAAE,GAAGL,MAAM,CAACI,IAAZ;AAAkBE,UAAAA,QAAQ,EAAE;AAA5B;AAA9B,OAAP;;AAEF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAEL,SAACC,MAAM,CAACI,IAAP,CAAYC,EAAb,GAAkB,EAChB,GAAGL,MAAM,CAACI,IADM;AAEhBE,UAAAA,QAAQ,EAAEP,KAAK,CAACC,MAAM,CAACI,IAAP,CAAYC,EAAb,CAAL,CAAsBC;AAFhB;AAFb,OAAP;;AAQF,SAAKd,WAAL;AACE,UAAIe,KAAK,GAAG,EAAE,GAAGR;AAAL,OAAZ;AACA,aAAOQ,KAAK,CAACP,MAAM,CAACE,MAAR,CAAZ;AACA,aAAOK,KAAP;;AAEF,SAAKZ,IAAL;AACE,aAAO,EACL,GAAGI,KADE;AAEL,SAACC,MAAM,CAACE,MAAR,GAAiB,EAAE,GAAGD,CAAL;AAAQO,UAAAA,KAAK,EAAER,MAAM,CAACQ;AAAtB;AAFZ,OAAP;;AAKF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGG,KADE;AAEL,SAACC,MAAM,CAACE,MAAR,GAAiB,EAAE,GAAGD,CAAL;AAAQK,UAAAA,QAAQ,EAAE,CAAC,GAAGL,CAAC,CAACK,QAAN,EAAgBN,MAAM,CAACS,OAAvB;AAAlB;AAFZ,OAAP;;AAKF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGE,KADE;AAEL,SAACC,MAAM,CAACE,MAAR,GAAiB,EACf,GAAGD,CADY;AACTK,UAAAA,QAAQ,EAAEL,CAAC,CAACK,QAAF,CAAWI,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASL,MAAM,CAACY,SAAvC;AADD;AAFZ,OAAP;;AAOF;AACE,aAAOb,KAAP;AA3CJ;AA6CD","sourcesContent":["import {\n  FETCH_POST,\n  REMOVE_POST,\n  ADD_POST,\n  UPDATE_POST,\n  VOTE,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from \"../actions/types\";\n\n\n\nexport default function rootReducer(state = {}, action) {\n  let p = state[action.postId];\n\n  switch (action.type) {\n\n    case FETCH_POST:\n      return { ...state, [action.post.id]: action.post };\n\n    case ADD_POST:\n      return { ...state, [action.post.id]: { ...action.post, comments: [] }};\n\n    case UPDATE_POST:\n      return {\n        ...state,\n        [action.post.id]: {\n          ...action.post,\n          comments: state[action.post.id].comments\n        }\n      };\n\n    case REMOVE_POST:\n      let posts = { ...state };\n      delete posts[action.postId];\n      return posts;\n\n    case VOTE:\n      return {\n        ...state,\n        [action.postId]: { ...p, votes: action.votes }\n      };\n\n    case ADD_COMMENT:\n      return {\n        ...state,\n        [action.postId]: { ...p, comments: [...p.comments, action.comment] }\n      };\n\n    case REMOVE_COMMENT :\n      return {\n        ...state,\n        [action.postId]: {\n          ...p, comments: p.comments.filter(c => c.id !== action.commentId)\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}